{"componentChunkName":"component---src-templates-post-js","path":"/blog/react/getting-started/","result":{"data":{"markdownRemark":{"fields":{"slug":"/blog/react/getting-started/"},"html":"<h2>Why React!</h2>\n<ul>\n<li>\n<p>A javascript library for building user interfaces</p>\n</li>\n<li>\n<p>React is small, not a complete solutions</p>\n</li>\n<li>\n<p>UI are everywhere </p>\n</li>\n<li>\n<p>React is declarative</p>\n</li>\n<li>\n<p>Declarative for dynamic data</p>\n<h4>How exactly is not being a framework a good thing?</h4>\n</li>\n<li>\n<p>Many smart decisions</p>\n</li>\n<li>\n<p>Focus in application level</p>\n</li>\n<li>\n<p>Disadvantages about framework</p>\n<ul>\n<li>Limited flexibility</li>\n<li>Hard to deviate</li>\n<li>Large and full of features</li>\n</ul>\n</li>\n<li>\n<p>Philosophy</p>\n<blockquote>\n<ul>\n<li>Write programs that do one thing and do it well.</li>\n<li>Write programas to work together.</li>\n<li>Write programas to handle text streams, bacause that is a universal interface.</li>\n<li>A language to model the state of UIs, not the transactions on them</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2>Concepts</h2>\n<ol>\n<li>\n<p>Components</p>\n<ul>\n<li>Like functions</li>\n<li>Input: props,state | Output: UI</li>\n<li>Reusable and composable</li>\n<li>COmponent /</li>\n<li>Can manage a private state</li>\n</ul>\n</li>\n<li>\n<p>Reactive update</p>\n<ul>\n<li>React will react</li>\n<li>Take update to the browser</li>\n</ul>\n</li>\n<li>\n<p>Virtual views in memory</p>\n<ul>\n<li>Generate HTML using Javascript</li>\n<li>Tree reconciliation</li>\n</ul>\n</li>\n<li>\n<p>Function Component</p>\n<blockquote>\n<p>const MyComponent = (props) => {</p>\n</blockquote>\n<pre><code>return (&#x3C;domElementOrComponent ... />)\n</code></pre>\n<p> }</p>\n<p>props dont change</p>\n</li>\n<li>\n<p>Class COmponent</p>\n<blockquote>\n<p>Class </p>\n</blockquote>\n<pre><code>MyComponent \n    extends React.Component {\n    render() {\n        return (&#x3C;dome ../>)\n    }\n}\n</code></pre>\n<p>states changes</p>\n</li>\n<li>\n<p>JSX is Not HTML</p>\n</li>\n</ol>\n<h3>React Component</h3>\n<p><a href=\"https://jscomplete.com/playground/s239555\" target='_blank'>Js Complete for this part</a> </p>\n<ul>\n<li>\n<p>Install React DevTools Extension </p>\n</li>\n<li>\n<p>JSX to JS (babel)</p>\n<blockquote>\n<p>&#x3C; div> Hello React &#x3C; /div>\nReact.createElement(\"div\",null,'Hello React!')</p>\n</blockquote>\n</li>\n<li>\n<p>React has some rules uppercase in first letter</p>\n<blockquote>\n<p>&#x3C; Button /> !== &#x3C; button /></p>\n</blockquote>\n</li>\n<li>\n<p>React has a special function useState()</p>\n<pre><code>return [ \n    state object getter (getter),\n    updater function (setter)\n]\n</code></pre>\n<blockquote>\n<p>useState called hook     </p>\n</blockquote>\n</li>\n<li>\n<h4>Why does react not work with sibling tag?</h4>\n<blockquote>\n<p>Is because each one of these elements get translated to function call</p>\n</blockquote>\n<ul>\n<li>\n<p>Use array in dynamic way</p>\n<pre><code>[&#x3C; Button />,&#x3C; Display />]\n</code></pre>\n</li>\n<li>\n<p>Use the children of another React element</p>\n<pre><code>&#x3C; div>\n    &#x3C; Button />\n    &#x3C; Display />\n&#x3C; /div>\n</code></pre>\n</li>\n<li>\n<p>Use a special object enclose multiple children</p>\n<pre><code>&#x3C; React.Fragment >{...children} &#x3C; React.fragment />\nor\n&#x3C;> {...children}&#x3C;/>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>One way flow of data</p>\n<blockquote>\n<p>Parents components can flow their data down to children components. Parents component can also flow down behavior to children</p>\n</blockquote>\n</li>\n<li>\n<p>Responsibility </p>\n<blockquote>\n<p>Important decision, where to define state?</p>\n</blockquote>\n<blockquote>\n<p>Down in a tree as close as possible to the children who need to acces that value on the state.</p>\n</blockquote>\n</li>\n</ul>\n<h4>Components Reusability</h4>\n<pre><code>  \n</code></pre>","frontmatter":{"title":"React Getting Started","keywords":"react"},"excerpt":"Why React! A javascript library for building user interfaces React is small, not a complete solutions UI are everywhere  React isâ€¦"}},"pageContext":{"slug":"/blog/react/getting-started/"}},"staticQueryHashes":["3159585216","4202924991"]}